My entry
Choice coin
https://gateway.pinata.cloud/ipfs/QmQy1TUEQKiMKQnK72ryU3rqH1S5hbLUNAWzowNMPQCmSM?preview=1
https://algoexplorer.io/asset/541407716
Skyprinx#3090
let note = undefined; // arbitrary data to be stored in the transaction; here, none is stored

// Asset creation specific parameters

// The following parameters are asset specific

// Throughout the example these will be re-used. 

// We will also change the manager later in the example

let addr = recoveredAccount1.addr;

// Whether user accounts will need to be unfrozen before transacting    

let defaultFrozen = false;

// integer number of decimals for asset unit calculation

let decimals = 0;

// total number of this asset available for circulation   

let totalIssuance = 1;

// Used to display asset units to user    

let unitName = "CCN";

// Friendly name of the asset    

let assetName = "Choice coin";

// Optional string pointing to a URL relating to the asset

let assetURL = "https://gateway.pinata.cloud/ipfs/QmQy1TUEQKiMKQnK72ryU3rqH1S5hbLUNAWzowNMPQCmSM?preview=1";

// Optional hash commitment of some sort relating to the asset. 96 character length.

let assetMetadataHash = "QmQy1TUEQKiMKQnK72ryU3rqH1S5hbLUNAWzowNMPQCmSM";

// The following parameters are the only ones

// that can be changed, and they have to be changed

// by the current manager

// Specified address can change reserve, freeze, clawback, and manager

let manager = recoveredAccount2.addr;

// Specified address is considered the asset reserve

// (it has no special privileges, this is only informational)

let reserve = recoveredAccount2.addr;

// Specified address can freeze or unfreeze user asset holdings 

let freeze = recoveredAccount2.addr;

// Specified address can revoke user asset holdings and send 

// them to other addresses    

let clawback = recoveredAccount2.addr;

// signing and sending "txn" allows "addr" to create an asset

let txn = algosdk.makeAssetCreateTxnWithSuggestedParams(addr, note,

        totalIssuance, decimals, defaultFrozen, manager, reserve, freeze,

    clawback, unitName, assetName, assetURL, assetMetadataHash, params);

let rawSignedTxn = txn.signTxn(recoveredAccount1.sk)

let tx = (await algodclient.sendRawTransaction(rawSignedTxn).do());

console.log("Transaction : " + tx.txId);

let assetID = null;

// wait for transaction to be confirmed

await waitForConfirmation(algodclient, tx.txId);

// Get the new asset's information from the creator account

let ptx = await algodclient.pendingTransactionInformation(tx.txId).do();

assetID = ptx["asset-index"]; 
